def gcdex(a, b):
    """ Ітераційний розширений алгоритм Евкліда.

    Параметри:
    a, b -- цілі числа

    Повертає:
    d, x, y -- такі що d = gcd(a, b) і d = ax + by
    """
    x0, x1, y0, y1 = 1, 0, 0, 1
    while b != 0:
        q = a // b
        a, b = b, a % b
        x0, x1 = x1, x0 - q * x1
        y0, y1 = y1, y0 - q * y1
    return a, x0, y0


def inverse_element(a, n):
    """ Знаходження мультиплікативного оберненого елемента a^(-1) по модулю n.

    Параметри:
    a -- число для якого треба знайти обернений елемент
    n -- модуль

    Повертає:
    Мультиплікативний обернений елемент a^(-1) по модулю n або None, якщо він не існує.
    """
    d, x, _ = gcdex(a, n)
    if d != 1:
        return None  # Обернений елемент не існує
    else:
        return x % n


# Тестування на прикладі a = 5 і n = 18
a, n = 5, 18
inv = inverse_element(a, n)
if inv is not None:
    print(f'Мультиплікативний обернений елемент для a = {a} по модулю n = {n} дорівнює {inv}')
else:
    print(f'Мультиплікативний обернений елемент для a = {a} по модулю n = {n} не існує')